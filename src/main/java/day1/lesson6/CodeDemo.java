package day1.lesson6;

/**
 * 代码块:
 *    在java中,使用{}括起来的代码被称为代码块
 *    根据其位置和声明的不同,可以分为局部代码块,构造代码块,静态代码块
 *
 *  局部代码块: 在局部位置
 *            用于限定变量的生命周期
 *            多个局部代码块执行顺序:从上往下依次执行;
 *
 *  构造代码块: 在类中的成员位置,用{}括起来的部分,每次执行构造方法前,都会先执行构造代码块
 *            作用:可以吧多个构造方法中的公共代码部分提取出来,放入构造代码块中
 *
 *  静态代码块:在类中的成员位置,用{}括起来,用static的部分
 *           随着类的加载而加载,只执行一次,静态代码块之间,也是按照先后顺序执行
 * 区别:
 *  构造代码块: 对对象进行初始化,所以每次创建对象都会执行构造代码块
 *  静态代码块: 对类进行初始化,所以不论创建多少对象,静态代码块只执行一次,因为类只加载一次
 *
 */

public class CodeDemo {
    public static void main(String[] args){

        /**
         * 多个局部代码块, 从上往下依次执行;
         *
         */
        {
            int x=10;
            System.out.println(x);
        }
        {
            int y=20;
            System.out.println(y);
        }


        System.out.println("===========");

        Code c = new Code();  // 创建code类对象时,先执行了构造代码块,在执行了无参构造方法
        Code c2 = new Code();  // 每次创建对象如果有构造代码块,都会先执行构造代码块
        /**
         * 不管我们构造方法调的是无参还是带参,只要我们创建一个对象
         * 就会去调用一次构造代码块
         *
         */
        Code c3 = new Code(1);
    }
}
